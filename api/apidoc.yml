openapi: 3.0.0
info:
  title: User API
  description: User API
  version: 1.0.0
paths:
  /:
    get:
      summary: Redirect to the UI
      description: |
        Default operation to redirect to the UI index page.
      operationId: redirectUsers
      responses:
        '302':
          description: redirect to the UI page
  /users:
    get:
      summary: List the available tasks
      description: |
        The list of tasks can be filtered by their status.
      operationId: listUsers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
      security:
        - user_auth:
            - 'read:user'
    post:
      summary: Create a user
      description: ''
      operationId: createUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
      security:
        - user_auth:
            - 'write:user'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: First name
                surname:
                  type: string
                  description: Last name
                birth_date:
                  type: string
                  format: date
                  description: Birth date
                email:
                  type: string
                  description: Email
                password:
                  type: string
                  description: Password
                phone:
                  type: string
                  description: Phone number
                identity:
                  type: string
                  description: Id Card number
                passport_number:
                  type: string
                  description: Passport number
              required:
                  - id
                  - name
                  - surname
                  - password
                  - birth_date
                  - email
                  - identity
  '/users/{userId}':
    put:
      summary: Update the user
      description: |
        Update the user data
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: The user identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: |
            The user does not exist.
      security:
        - user_auth:
            - 'write:user'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: First name
                surname:
                  type: string
                  description: Last name
                birth_date:
                  type: string
                  format: date
                  description: Birth date
                email:
                  type: string
                  description: Email
                password:
                  type: string
                  description: Password
                phone:
                  type: string
                  description: Phone number
                identity:
                  type: string
                  description: Id Card number
                passport_number:
                  type: string
                  description: Passport number
    delete:
      summary: Delete the user
      description: |
        Delete the user
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: The user identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: |
            No content.
        '404':
          description: |
            The user does not exist.
      security:
        - user_auth:
            - 'write:user'
security:
  - user_auth: []
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  securitySchemes:
    user_auth:
      type: oauth2
      flows:
        password:
          tokenUrl: 'http://localhost:8080/v1/oauth/token'
          scopes:
            'write:user': Write a user
            'read:user': Read a user
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The user identifier
        name:
          type: string
          description: First name
        surname:
          type: string
          description: Last name
        birth_date:
          type: string
          format: date
          description: Birth date
        email:
          type: string
          description: Email
        password:
          type: string
          description: Password
        phone:
          type: string
          description: Phone number
        identity:
          type: string
          description: Id Card number
        passport_number:
          type: string
          description: Passport number
        
      required:
        - id
        - name
        - surname
        - birth_date
        - email
        - identity
      example:
        id: 23
        name: Jon
        surname: Doe
        password: userpassw
        email: jon.doe@example.com
        identity: "123456"
        birth_date_date: '1988-11-24'
      xml:
        name: User